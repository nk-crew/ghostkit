<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    name="GhostKit"
    xsi:noNamespaceSchemaLocation="./vendor/squizlabs/php_codesniffer/phpcs.xsd">

    <description>GhostKit rules for PHP_CodeSniffer</description>

    <!--
    #############################################################################
    COMMAND LINE ARGUMENTS
    https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
    #############################################################################
    -->

 	<!-- Check the plugin directory and the directories below it. -->
	<file>.</file>
    <exclude-pattern>./tests/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/vendors/*</exclude-pattern>
    <exclude-pattern>/tests/_missing-wp-functions.php</exclude-pattern>
    <exclude-pattern>/tests/bootstrap.php</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/build/*</exclude-pattern>

	<!-- These files are too large to be scanned. -->
    <exclude-pattern>/classes/class-icons\.php</exclude-pattern>

	<!-- Only check the PHP files. JS files are checked separately with JSCS and JSHint. -->
	<arg name="extensions" value="php"/>

	<!-- Show progress, show the error codes for each message (source). -->
	<arg value="ps"/>

	<!-- Check up to 8 files simultaneously. -->
	<arg name="parallel" value="8"/>

	<!-- Set the memory limit to 256M.
	For most standard PHP configurations, this means the memory limit will temporarily be raised.
	Ref: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Advanced-Usage#specifying-phpini-settings
	-->
	<ini name="memory_limit" value="256M"/>

	<!--
	Prevent errors caused by WordPress Coding Standards not supporting PHP 8.0+.
	See https://github.com/WordPress/WordPress-Coding-Standards/issues/2035
	-->
	<ini name="error_reporting" value="E_ALL &#38; ~E_DEPRECATED" />

	<!--
	#############################################################################
	SET THE RULES TO USE
	See https://github.com/WordPress/WordPress-Coding-Standards
	See https://github.com/PHPCompatibility/PHPCompatibility
	#############################################################################
	-->

	<!-- Include sniffs for PHP cross-version compatibility. -->
	<config name="testVersion" value="7.2-"/>
	<rule ref="PHPCompatibilityWP">
		<include-pattern>*\.php$</include-pattern>
	</rule>

	<rule ref="WordPress-Core" />
	<rule ref="WordPress-Docs" />
	<rule ref="WordPress.WP.I18n" />
	<config name="text_domain" value="ghostkit" />

	<rule ref="WordPress.CodeAnalysis.EmptyStatement"/>


    <!--
    #############################################################################
    SNIFF SPECIFIC CONFIGURATION
    See https://github.com/WordPress/WordPress-Coding-Standards/wiki
    #############################################################################
    -->

    <!-- Set the minimum supported WP version to WP 4.9. -->
    <config name="minimum_supported_wp_version" value="4.9"/>

    <!-- Prevent error about filename with Class -->
    <rule ref="WordPress.Files.FileName">
        <properties>
            <property name="strict_class_file_names" value="false" />
        </properties>
    </rule>


    <!-- Verify that all gettext calls use the correct text domain. -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array">
                <!-- This placeholder domain will be replaced automatically on each release. -->
                <element value="ghostkit"/>
            </property>
        </properties>
    </rule>

    <!-- Verify that everything in the global namespace is prefixed with a theme specific prefix.
         Multiple valid prefixes can be provided as a comma-delimited list. -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <properties>
            <property name="prefixes" type="array">
                <element value="GhostKit"/>
                <element value="gkt"/>
            </property>
        </properties>
    </rule>

    <rule ref="WordPress.Arrays.MultipleStatementAlignment">
        <properties>
            <!-- No need to adjust alignment of large arrays when the item with the largest key is removed. -->
            <property name="exact" value="false"/>
            <!-- Don't align multi-line items if ALL items in the array are multi-line. -->
            <property name="alignMultilineItems" value="!=100"/>
            <!-- Array Assignment operator should always be on the same line as the array key. -->
            <property name="ignoreNewlines" value="false"/>
        </properties>
    </rule>

</ruleset>
